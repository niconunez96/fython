name: continuous_integration
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "!invoke-release-main-**"
      - "*"
jobs:
  mypy_validation:
    name: MyPy validation ðŸ¤–
    runs-on: ubuntu-latest
    steps:
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - name: Select python version
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run mypy
        run: mypy .
  flake8_validation:
    name: Flake8 validation ðŸ’…
    runs-on: ubuntu-latest
    steps:
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - name: Select python version
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run flake8
        run: flake8
  test:
    runs-on: ubuntu-latest
    needs: [mypy_validation, flake8_validation]
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    name: Check tests for Python ${{ matrix.python-version }} ðŸ§ª
    steps:
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - name: Select python version
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest tests
  send_coverage:
    runs-on: ubuntu-latest
    name: Send test coverage
    needs: [test]
    steps:
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run tests and collect coverage
        run: |
          coverage run -m pytest tests
          coverage xml
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v2
